services:
  xilia-strapi:
    container_name: xilia-strapi
    build: .
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: xilia-db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      - ./.env:/opt/app/.env
      - ./public:/opt/app/public
    ports:
      - "${PORT:-1337}:${PORT:-1337}"
    networks:
      - xilia-network
    depends_on:
      - xilia-db

  xilia-db:
    container_name: xilia-db
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "${DATABASE_HOST_PORT:-5432}:5432"
    networks:
      - xilia-network

  xilia-adminer:
    container_name: xilia-adminer
    image: adminer
    restart: unless-stopped
    ports:
      - '${ADMINER_HOST_PORT:-8080}:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=strapiDB
    networks:
      - xilia-network
    depends_on:
      - xilia-db

volumes:
  strapi-data:

networks:
  xilia-network:
    name: xilia-network
    driver: bridge